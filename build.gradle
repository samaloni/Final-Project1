import org.apache.tools.ant.taskdefs.condition.Os

ext {
	// The drivers we want to use
	drivers = ["chrome"]

	ext {
		gebVersion = '1.1.1'
		seleniumVersion = '2.53.0'
		chromeDriverVersion = '2.24'
	}
}

apply plugin: "groovy"
apply from: "gradle/webDriverDownloads.gradle"

repositories { 
	mavenCentral() 
}

dependencies {
	// If using Spock, need to depend on geb-spock
	testCompile "org.gebish:geb-spock:$gebVersion"
	testCompile("org.spockframework:spock-core:1.1-groovy-2.4-rc-3")

	testRuntime "org.seleniumhq.selenium:selenium-support:$seleniumVersion"

	// Drivers
	testCompile "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
	testCompile "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
}

drivers.each { driver ->
	task "${driver}Test"(type: Test) {
		reports {
			html.destination = reporting.file("$name/tests")
			junitXml.destination = file("$buildDir/test-results/$name")
		}

		outputs.upToDateWhen { false }  // Always run tests

		systemProperty "geb.build.reportsDir", reporting.file("$name/geb")
		systemProperty "geb.env", driver

		// If you wanted to set the baseUrl in your build…
		// systemProperty "geb.build.baseUrl", "http://myapp.com"
	}
}

chromeTest {
	dependsOn unzipChromeDriver

	def chromedriverFilename = Os.isFamily(Os.FAMILY_WINDOWS) ? "chromedriver.exe" : "chromedriver"
	systemProperty "webdriver.chrome.driver", new File(unzipChromeDriver.outputs.files.singleFile, chromedriverFilename).absolutePath
}


test {
	dependsOn drivers.collect { tasks["${it}Test"] }
	enabled = false
}